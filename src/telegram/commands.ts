import { Telegraf, Scenes } from 'telegraf';
import { profileService } from '../services/profile.service';
import { kb } from './keyboards';
import { templates } from '../domain/templates';

type SceneContext = Scenes.SceneContext;

const enterScene = (sceneId: string) => async (ctx: SceneContext) => {
  await ctx.scene.enter(sceneId);
};

const sendMainMenu = async (ctx: SceneContext, text: string) => {
  const tgId = ctx.from?.id;
  const profile = tgId ? await profileService.get(tgId) : null;
  await ctx.reply(text, kb.main(Boolean(profile)));
};

const sendStatus = async (ctx: SceneContext) => {
  const tgId = ctx.from?.id;
  if (!tgId) {
    await ctx.reply('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å.');
    return;
  }
  const profile = await profileService.get(tgId);
  if (!profile) {
    await ctx.reply('–ê–Ω–∫–µ—Ç—ã –µ—â—ë –Ω–µ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏ ¬´üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è¬ª, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.', kb.main(false));
    return;
  }
  await ctx.reply(templates.profilePreview(profile), {
    parse_mode: 'MarkdownV2',
    link_preview_options: { is_disabled: true },
    reply_markup: kb.profileActions().reply_markup
  });
};

export const registerCommands = (bot: Telegraf<SceneContext>) => {
  bot.start(async (ctx) => {
    const tgId = ctx.from?.id;
    const profile = tgId ? await profileService.get(tgId) : null;
    if (profile) {
      await ctx.reply('–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º! –ß—Ç–æ –¥–µ–ª–∞–µ–º –¥–∞–ª—å—à–µ?', kb.main(true));
      return;
    }
    await ctx.reply('–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Å–æ–±—Ä–∞—Ç—å —Ç–≤–æ—é –∞–Ω–∫–µ—Ç—É –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ. –ù–∞—á–Ω—ë–º?', kb.main(false));
    return ctx.scene.enter('registration');
  });

  bot.command('register', enterScene('registration'));
  bot.command('listing', enterScene('newListing'));
  bot.command('status', sendStatus);
  bot.command('menu', async (ctx) => sendMainMenu(ctx, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'));

  bot.hears('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', async (ctx) => sendMainMenu(ctx, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'));
  bot.hears('–û—Ç–º–µ–Ω–∞', async (ctx) => sendMainMenu(ctx, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'));
  bot.hears('üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', enterScene('registration'));
  bot.hears('üì¢ –†–∞–∑–º–µ—Å—Ç–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ', enterScene('newListing'));
  bot.hears('‚ÑπÔ∏è –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å', sendStatus);
  bot.hears('‚úèÔ∏è –û–±–Ω–æ–≤–∏—Ç—å –∞–Ω–∫–µ—Ç—É', enterScene('registration'));
};

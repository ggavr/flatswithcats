#!/usr/bin/env node

/**
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–º–º–∏—Ç –∏ –ø—É—à –∏–∑–º–µ–Ω–µ–Ω–∏–π
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node scripts/auto-commit.js "commit message"
 */

const { execSync, spawn } = require('child_process');
const fs = require('fs');
const path = require('path');

function runCommand(command, description) {
    try {
        console.log(`üîÑ ${description}...`);
        const result = execSync(command, { encoding: 'utf8', stdio: 'pipe' });
        console.log(`‚úÖ ${description} –∑–∞–≤–µ—Ä—à–µ–Ω–æ`);
        return result.trim();
    } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ ${description.toLowerCase()}:`, error.message);
        throw error;
    }
}

function hasChanges() {
    const status = execSync('git status --porcelain', { encoding: 'utf8' });
    return status.trim().length > 0;
}

function getStagedChanges() {
    try {
        const staged = execSync('git diff --cached --name-status', { encoding: 'utf8' });
        return staged.trim();
    } catch (error) {
        return '';
    }
}

function main() {
    const args = process.argv.slice(2);

    if (args.length === 0) {
        console.log('‚ùå –û—à–∏–±–∫–∞: –£–∫–∞–∂–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞');
        console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node scripts/auto-commit.js "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"');
        console.log('');
        console.log('–ü—Ä–∏–º–µ—Ä—ã:');
        console.log('  node scripts/auto-commit.js "feat: add search functionality"');
        console.log('  node scripts/auto-commit.js "fix: resolve login issue"');
        console.log('  node scripts/auto-commit.js "docs: update README"');
        process.exit(1);
    }

    const commitMessage = args.join(' ');

    try {
        console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–º–º–∏—Ç –∏ –ø—É—à...\n');

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
        if (!hasChanges()) {
            console.log('‚ÑπÔ∏è  –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞');
            return;
        }

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
        runCommand('git add .', '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –≤ –∏–Ω–¥–µ–∫—Å');

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ staged –∏–∑–º–µ–Ω–µ–Ω–∏–π
        const stagedChanges = getStagedChanges();
        if (!stagedChanges) {
            console.log('‚ÑπÔ∏è  –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è');
            return;
        }

        console.log('üìù –ò–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è –∫–æ–º–º–∏—Ç–∞:');
        console.log(stagedChanges);
        console.log('');

        // –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞
        runCommand(`git commit -m "${commitMessage}"`, `–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞ "${commitMessage}"`);

        // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–º–º–∏—Ç–µ
        const commitHash = runCommand('git rev-parse HEAD', '–ü–æ–ª—É—á–µ–Ω–∏–µ —Ö—ç—à–∞ –∫–æ–º–º–∏—Ç–∞');
        console.log(`üìã –ö–æ–º–º–∏—Ç: ${commitHash.substring(0, 8)}\n`);

        // –ü—É—à –≤ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
        try {
            runCommand('git push origin main', '–ü—É—à –≤ GitHub');
            console.log('‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—à–µ–Ω—ã!');
            console.log(`üîó –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è: https://github.com/ggavr/flatswithcats/commit/${commitHash}`);
        } catch (pushError) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É—à–µ. –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:');
            console.log('');
            console.log('üîê –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è:');
            console.log('  ‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω Personal Access Token –≤ Git');
            console.log('  ‚Ä¢ –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ SSH: git remote set-url origin git@github.com:ggavr/flatswithcats.git');
            console.log('');
            console.log('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:');
            console.log('  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é');
            console.log('  ‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ: git remote -v');
            console.log('  ‚Ä¢ –ò–ª–∏: ssh -T git@github.com');
            console.log('');
            throw pushError;
        }

    } catch (error) {
        console.error('\nüí• –ü—Ä–æ—Ü–µ—Å—Å –ø—Ä–µ—Ä–≤–∞–Ω –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏');
        process.exit(1);
    }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
if (require.main === module) {
    main();
}

module.exports = { main, hasChanges, runCommand };
